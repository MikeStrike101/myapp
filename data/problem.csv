"id","title","description","level","xp_reward"
"2","Chapter 2: The Looping Woods","To reach the second fragment, you must navigate the Looping Woods, a forest that repeats itself endlessly. You meet an old man who teaches you the patterns of loops to find your way through. Your challenge is to use loops to repeat actions and break out of the cycle, learning about for and while loops.  Problem: Modify the program that prints the numbers 1 through 5 to print the numbers 1 through 10 using the for loop.","2","100"
"3","Chapter 3: The Conditional Caves","The third fragment is hidden in the Conditional Caves, where paths open and close based on the phases of the moon. Here you learn about if-else statements to make decisions in your code, allowing you to choose the correct path and retrieve the fragment. Problem: The user needs to choose the correct path based on the phase of the moon. Modify the program so that the light variable  changes the current phase of the moon (on or off). ","2","50"
"4","Chapter 4: The Function Falls","The Function Falls hide the next fragment behind cascading waters. An old citizen from Evoland teaches you to transform magic into spells (functions) that can be used to control the flow of the magical water. You learn to write functions, understand scope, and pass parameters to modularize your code.  Problem: Look at the function called controlWaterFlow that takes a number representing the flow rate. If the rate is above 50, return ""The flow is too strong!"", if below 10, return ""The flow is too weak"", else return ""The flow is perfect!"".","2","50"
"5","Chapter 5: The Array of Artifacts","In the Array of Artifacts, you find a collection of magical items, but only the correct combination will reveal the fragment. You must learn the ways of arrays and basic data structures to organize these items and discover the hidden knowledge.  Problem: You're given an array (int[]) of artifact numbers. Modify the program that searches for a specific artifact name and outputs its position in the array.","3","50"
"6","Chapter 6: The Object Obelisk","The Object Obelisk stands tall. It resembles the long history of Evoland, with a lot of heroes dying because of programs with errors. To claim the fragment within, you must understand these heroes' attributes and abilities, teaching you object-oriented programming concepts such as classes, objects, and inheritance. Problem: Look at the class representing a hero with attributes like name, strength, and intelligence. Instantiate a hero with the name ""Marcus"", strengh equal to 10 and intelligence equal to 1. There is also a hero instantiated already as an example.  ","3","50"
"7","Chapter 7: The Algorithm Mountain","You are now at the peak of the Algorithm Mountain, you face a series of challenges that test your problem-solving skills. You learn about algorithms now. Algorithms are set of instructions which solve a problem. Once you learn this skill, it will help you decipher the patterns of the stars to reveal the fragment.  Problem: The program has a wrong hero, a wrong for loop, and a wrong if-else statement. Please fix this program so that the name of the hero is changed to Andrew, his skill is increased by 10, the for loop counts from 1 to n, (n is already declared) and the if statement checks if skill is higher than intelligence, and not smaller.","3","50"
"8","Chapter 8: The Recursive Realm","In the Recursive Realm, you come across a puzzle that mirrors itself infinitely. A magician reveals to you the power of recursion, and you learn to write recursive functions to unlock the secrets within and obtain the fragment. Problem: Write a recursive function that calculates the factorial of a number. Use this function to calculate and print the factorial of 5.","3","50"
"1","Chapter 1: The First Fragment – Hello, Evoland!","As you begin your journey, you encounter the enemy of the first fragment, an old automaton named ""The Calculator"". The Calculator will only relinquish the fragment if you can prove your understanding of the basic instructions of code. Your task is to fill in a spell (program) that makes two numbers add up to each other. This lesson teaches you how to declare what is called a variable (a and b in this case). Problem: Modify the program that makes the variables a and b add up to each other. ","1","100"
"9","Chapter 9: The Final Merge – The Codex Complete","With all the fragments in hand, you return to Evoland, where you must combine all your knowledge to reassemble the Codex. This final challenge requires you to integrate all the concepts you've learned to write a comprehensive program that brings the Codex to life and this will help you reach your final form. Problem: Create a program that defines a custom hero of your choice, that makes him defeat the random monster. You will then reach your final form. ","4","100"
"10","CONGRATULATIONS!","You've mastered the elementary skills to become a programmer and you've reached your final form.","5","0"
