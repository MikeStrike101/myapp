image: jhipster/jhipster:v7.9.4

cache:
  key: '$CI_COMMIT_REF_NAME'
  paths:
    - .gradle/

stages:
  - check
  - build
  - test
  - analyze
  - package
  - upload
  - release
  - deploy

before_script:
  - export NG_CLI_ANALYTICS="false"
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - ./gradlew npm_install -PnodeInstall --no-daemon

nohttp:
  stage: check
  script:
    - ./gradlew checkstyleNohttp --no-daemon

gradle-compile:
  stage: build
  script:
    - ./gradlew compileJava -x check -PnodeInstall --no-daemon
  artifacts:
    paths:
      - build/classes/
      - build/generated/
    expire_in: 1 day

gradle-test:
  stage: test
  script:
    - ./gradlew test -PnodeInstall --no-daemon
  artifacts:
    reports:
      junit: build/test-results/test/TEST-*.xml
    paths:
      - build/test-results/
      - build/jacoco/
    expire_in: 1 day

gradle-integration-test:
  stage: test
  script:
    - ./gradlew integrationTest -PnodeInstall --no-daemon --stacktrace --info
  artifacts:
    reports:
      junit: build/test-results/integrationTest/TEST-*.xml
    paths:
      - build/test-results/
      - build/jacoco/
    expire_in: 1 day

frontend-test:
  stage: test
  script:
    - ./gradlew npm_run_test -PnodeInstall --no-daemon
  artifacts:
    reports:
      junit: build/test-results/TESTS-results-jest.xml
    paths:
      - build/test-results/
      - build/jacoco/
    expire_in: 1 day

gradle-package:
  stage: package
  script:
    - ./gradlew bootJar -Pprod -PnodeInstall -x check --no-daemon
    - tar -czf build-artifacts.tar.gz build/libs/*.jar build/classes

upload-to-vm:
  stage: upload
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - echo $SSH_PRIVATE_KEY | base64 --decode > /tmp/id_rsa.key
    - chmod 600 /tmp/id_rsa.key
    - eval $(ssh-agent -s)
    - ssh-add /tmp/id_rsa.key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H 130.162.166.54 >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - scp -i /tmp/id_rsa.key build-artifacts.tar.gz ubuntu@130.162.166.54
  only:
    - main
  dependencies:
    - gradle-package

deploy:
  stage: deploy
  script:
    - echo "Deployment script will be added here later."
  only:
    - main

docker-push:
  stage: release
  variables:
    REGISTRY_URL: registry.gitlab.com
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA
  dependencies:
    - gradle-package
  script:
    - ./gradlew jib -Pprod -PnodeInstall -Djib.to.image=$IMAGE_TAG -Djib.to.auth.username="gitlab-ci-token"  -Djib.to.auth.password=$CI_BUILD_TOKEN
